<?php

declare(strict_types=1);

namespace GoSuccess\Digistore24IPN\Dto;

use DateTimeImmutable;
use GoSuccess\Digistore24IPN\Helper\DtoHelper;
use GoSuccess\Digistore24IPN\Enum\Action;
use GoSuccess\Digistore24IPN\Enum\BillingStatus;
use GoSuccess\Digistore24IPN\Enum\BillingStopReason;
use GoSuccess\Digistore24IPN\Enum\BillingType;
use GoSuccess\Digistore24IPN\Enum\Event;
use GoSuccess\Digistore24IPN\Enum\OrderType;
use GoSuccess\Digistore24IPN\Enum\PayMethod;
use GoSuccess\Digistore24IPN\Enum\ProductDeliveryType;
use GoSuccess\Digistore24IPN\Enum\TransactionType;
use GoSuccess\Digistore24IPN\Enum\UpgradeType;

/**
 * Data Transfer Object for handling IPN requests from Digistore24.
 *
 * This class uses PHP 8.4 Property Hooks to provide clean camelCase property access
 * while accepting snake_case input from Digistore24 IPN.
 * 
 * Properties use 'set' hooks to automatically convert snake_case to camelCase.
 * This eliminates the need for complex reflection logic in DtoHelper.
 */
class IPNRequestDto
{
    // Action
    private ?Action $_action = null;
    public ?Action $action {
        get => $this->_action;
        set => $this->_action = is_string($value) ? Action::from($value) : $value;
    }

    // Amount fields
    private ?float $_amountAffiliate = null;
    public ?float $amountAffiliate {
        get => $this->_amountAffiliate;
        set => $this->_amountAffiliate = $value !== null ? (float) $value : null;
    }

    private ?float $_amountBrutto = null;
    public ?float $amountBrutto {
        get => $this->_amountBrutto;
        set => $this->_amountBrutto = $value !== null ? (float) $value : null;
    }

    private ?float $_amountCredited = null;
    public ?float $amountCredited {
        get => $this->_amountCredited;
        set => $this->_amountCredited = $value !== null ? (float) $value : null;
    }

    private ?float $_amountFee = null;
    public ?float $amountFee {
        get => $this->_amountFee;
        set => $this->_amountFee = $value !== null ? (float) $value : null;
    }

    private ?float $_amountNetto = null;
    public ?float $amountNetto {
        get => $this->_amountNetto;
        set => $this->_amountNetto = $value !== null ? (float) $value : null;
    }
    public ?float $amountPartner = null;
    public ?float $amountPayout = null;
    public ?float $amountProvider = null;
    public ?float $amountVendor = null;
    public ?float $amountVat = null;
    public ?string $addressCity = null;
    public ?string $addressCompany = null;
    public ?string $addressCountry = null;
    public ?string $addressCountryName = null;
    public ?string $addressEmail = null;
    public ?string $addressFirstName = null;
    public ?string $addressId = null;
    public ?string $addressLastName = null;
    public ?string $addressPhoneNo = null;
    public ?string $addressSalutation = null;
    public ?string $addressState = null;
    public ?string $addressStreet = null;
    public ?string $addressStreet2 = null;
    public ?string $addressStreetName = null;
    public ?string $addressStreetNumber = null;
    public ?string $addressTaxId = null;
    public ?string $addressTitle = null;
    public ?string $addressZipcode = null;
    public ?string $affiliateName = null;
    public ?int $affiliateId = null;
    public ?string $affiliateLink = null;
    public ?BillingStatus $billingStatus = null;
    public ?BillingStopReason $billingStopReason = null;
    public ?BillingType $billingType = null;
    public ?int $buyerId = null;
    public ?string $campaignkey = null;
    public ?string $country = null;
    public ?string $couponCode = null;
    public ?float $couponAmountLeft = null;
    public ?float $couponAmountTotal = null;
    public ?string $couponCurrency = null;
    public ?int $couponId = null;
    public ?string $currency = null;
    public ?string $custom = null;
    public ?string $customKey = null;
    public ?string $customerAffiliateUrl = null;
    public ?string $customerAffiliateName = null;
    public ?string $customerAffiliatePromoUrl = null;
    public ?string $customerToAffiliateUrl = null;
    public ?DateTimeImmutable $deliveryDate = null;
    public ?string $email = null;
    public ?DateTimeImmutable $eticketCreatedAt = null;
    public ?int $eticketCount = null;
    public ?int $eticketCode = null;
    public ?string $eticketDate = null;
    public ?string $eticketHint = null;
    public ?int $eticketId = null;
    public ?bool $eticketIsBlocked = null;
    public ?DateTimeImmutable $eticketModifiedAt = null;
    public ?int $eticketNo = null;
    public ?string $eticketUrl = null;
    public ?string $eticketUsedAt = null;
    public ?Event $event = null;
    public ?string $eventLabel = null;
    public ?float $firstAmount = null;
    public ?string $firstBillingInterval = null;
    public ?float $firstVatAmount = null;
    public ?string $formCount = null;
    public ?string $formNo = null;
    public ?string $ipnConfigApiKeyId = null;
    public ?int $ipnConfigDomainId = null;
    public ?int $ipnConfigId = null;
    public ?string $ipnConfigProductsIds = null;
    public ?float $ipnVersion = null;
    public ?DateTimeImmutable $isCancelledFor = null;
    public ?bool $isGdprCountry = null;
    public ?string $language = null;
    public ?string $licenseCreated = null;
    public ?string $licenseDataEmail = null;
    public ?string $licenseDataFirstName = null;
    public ?string $licenseDataLastName = null;
    public ?string $licenseDataProduct = null;
    public ?string $licenseKey = null;
    public ?string $licenseKeyType = null;
    public ?int $licenseId = null;
    public ?string $locationAddress = null;
    public ?string $locationCountry = null;
    public ?string $locationDirections = null;
    public ?int $locationId = null;
    public ?string $locationLatitude = null;
    public ?string $locationLongitude = null;
    public ?string $locationMapImageUrl = null;
    public ?string $locationName = null;
    public ?string $locationNote = null;
    public ?string $merchantName = null;
    public ?int $merchantId = null;
    public ?DateTimeImmutable $nextPaymentAt = null;
    public ?string $newsletterChoice = null;
    public ?string $newsletterChoiceMsg = null;
    public ?string $note = null;
    public ?int $numberOfInstallments = null;
    public ?BillingStatus $orderBillingStatus = null;
    public ?DateTimeImmutable $orderDate = null;
    public ?DateTimeImmutable $orderDateTime = null;
    public ?string $orderDetailsUrl = null;
    public ?string $orderId = null;
    public ?bool $orderIsPaid = null;
    public ?string $orderTime = null;
    public ?OrderType $orderType = null;
    public ?int $orderformId = null;
    public ?float $otherAmounts = null;
    public ?string $otherBillingIntervals = null;
    public ?float $otherVatAmounts = null;
    public ?PayMethod $payMethod = null;
    public ?int $paySequenceNo = null;
    public ?int $payplanId = null;
    public ?string $paymentId = null;
    public ?ProductDeliveryType $productDeliveryType = null;
    public ?float $productAmount = null;
    public ?int $productId = null;
    public ?string $productIds = null;
    public ?string $productLanguage = null;
    public ?float $productNettoAmount = null;
    public ?string $productName = null;
    public ?float $productShippingAmount = null;
    public ?float $productTxnAmount = null;
    public ?float $productTxnNettoAmount = null;
    public ?float $productTxnShipping = null;
    public ?float $productTxnVatAmount = null;
    public ?float $productVatAmount = null;
    public ?int $quantity = null;
    public ?DateTimeImmutable $rebillStopNotedAt = null;
    public ?string $rebillingStopUrl = null;
    public ?string $receiptUrl = null;
    public ?string $referringAffiliateName = null;
    public ?string $refundDays = null;
    public ?string $renewUrl = null;
    public ?string $requestRefundUrl = null;
    public ?string $salesteamName = null;
    public ?int $salesteamId = null;
    public ?string $shaSign = null;
    public ?string $SHASIGN = null;
    public ?string $supportUrl = null;
    public ?string $tag1 = null;
    public ?string $tags = null;
    public ?float $transactionAmount = null;
    public ?string $transactionCurrency = null;
    public ?int $transactionId = null;
    public ?DateTimeImmutable $transactionDate = null;
    public ?DateTimeImmutable $transactionProcessedAt = null;
    public ?TransactionType $transactionType = null;
    public ?string $trackingkey = null;
    public ?string $upgradeKey = null;
    public ?UpgradeType $upgradeType = null;
    public ?string $upgradedAddressFirstName = null;
    public ?string $upgradedAddressLastName = null;
    public ?int $upgradedBuyerId = null;
    public ?string $upgradedEmail = null;
    public ?string $upgradedOrderDate = null;
    public ?string $upgradedOrderDateTime = null;
    public ?string $upgradedOrderId = null;
    public ?string $upgradedOrderPaidUntil = null;
    public ?string $upgradedOrderTime = null;
    public ?int $upgradedProductId = null;
    public ?string $upgradedProductName = null;
    public ?string $variantId = null;
    public ?string $variantName = null;
    public ?float $vatRate = null;
    public ?string $voucherCode = null;
    public ?string $usedCouponCode = null;
    public ?int $usedCouponId = null;

    public static function fromPost(): self
    {
        return DtoHelper::fromPost(self::class);
    }
    
    public static function fromGet(): self
    {
        return DtoHelper::fromGet(self::class);
    }

    public static function map(): self
    {
        return DtoHelper::fromRequest(self::class);
    }
}
